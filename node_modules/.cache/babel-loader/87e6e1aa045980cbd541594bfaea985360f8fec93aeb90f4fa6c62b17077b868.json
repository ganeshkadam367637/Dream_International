{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Development\\\\dream_international\\\\src\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  setTime\n}) => {\n  _s();\n  const [inputTime, setInputTime] = useState(5); // State for input time, default 5 seconds\n\n  const handleInputChange = e => {\n    setInputTime(parseInt(e.target.value));\n  };\n  const handleSetTime = () => {\n    setTime(inputTime);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Set Toast Message Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time (seconds):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: inputTime,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSetTime,\n          children: \"Set Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Modal, \"v7OeoHSXJkFXn0z3dAFcTqEqw9g=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","isOpen","onClose","setTime","_s","inputTime","setInputTime","handleInputChange","e","parseInt","target","value","handleSetTime","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/React Development/dream_international/src/Modal.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Modal = ({ isOpen, onClose, setTime }) => {\r\n    const [inputTime, setInputTime] = useState(5); // State for input time, default 5 seconds\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputTime(parseInt(e.target.value));\r\n    };\r\n\r\n    const handleSetTime = () => {\r\n        setTime(inputTime);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isOpen &&\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <h3>Set Toast Message Time</h3>\r\n                        <label>Time (seconds):</label>\r\n                        <input type=\"number\" value={inputTime} onChange={handleInputChange} />\r\n                        <button onClick={handleSetTime}>Set Time</button>\r\n                        <button onClick={onClose}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/C,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC7BF,YAAY,CAACG,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBT,OAAO,CAACE,SAAS,CAAC;EACtB,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACKZ,MAAM,iBACHJ,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC1BhB,OAAA;QAAKiB,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC1BhB,OAAA;UAAAgB,QAAA,EAAI;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BrB,OAAA;UAAAgB,QAAA,EAAO;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BrB,OAAA;UAAOsB,IAAI,EAAC,QAAQ;UAACR,KAAK,EAAEN,SAAU;UAACe,QAAQ,EAAEb;QAAkB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtErB,OAAA;UAAQwB,OAAO,EAAET,aAAc;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjDrB,OAAA;UAAQwB,OAAO,EAAEnB,OAAQ;UAAAW,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBAEZ,CAAC;AAEX,CAAC;AAACd,EAAA,CA1BIJ,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}